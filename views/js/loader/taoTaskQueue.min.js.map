{"version":3,"mappings":"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","names":["define","helpers","data","buffer","helper","stack1","escapeExpression","_defaults","_allowedStatus","_categoryMap","import","export","delivery_comp","transfer","create","update","delete","_statusIcon","in_progress","completed","failed","getLabelString","getFormattedTime","getTimeString","getIcon","icon","taskElementApi","getId","getStatus","getData","_","$container","hider","highlight","setStatus","status","self","setTemplate","elementTpl","on","$component","init","initConfig","reportElementApi","reportFactory","title","emptyText","listApi","removeElement","listElement","insertElement","id","$li","setDetail","detailElement","show","hideDetail","scrollToTop","animateInsertion","$listElement","listTpl","e","getBadgeDataFromStatus","total","tasksStatuses","getBadgeDataFromElements","statusMap","created","stats","numberOfTasksFailed","numberOfTasksCompleted","numberOfTasksInProgress","_alignementConfig","initial","hPos","hOrigin","vPos","vOrigin","hOffset","showDetail","taskQueue","getTaskElements","list","reportElement","addNewTask","taskId","loadingBar","animate","selfUpdateBadge","loadData","found","tasksData","pulse","showList","hideList","removeAllFinished","forEach","selfUpdateClearButton","$clearAllBox","finishedCount","filter","size","managerTpl","$","$trigger","moveBy","alignWith","hide","addClass","config","start","replace","pollAllStop","archive","then","render","taskManager","tasks","pollAll"],"sources":["../component/listing/tpl/element!tpl","../component/listing/css/element!css","../component/listing/element.js","../component/listing/tpl/report!tpl","../component/listing/css/report!css","../component/listing/report.js","../component/listing/tpl/list!tpl","../component/listing/tpl/elementWrapper!tpl","../component/listing/css/list!css","../component/listing/list.js","../component/manager/tpl/manager!tpl","../component/manager/css/manager!css","../component/manager/manager.js","../controller/main.js","../controller/routes.js","onLayerEnd0.js","module-create.js"],"sourcesContent":["\ndefine('tpl!taoTaskQueue/component/listing/tpl/element', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-element \";\n  if (helper = helpers.status) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.status); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"container-icon\\\">\\n        <div class=\\\"shape\\\">\\n            <span class=\\\"\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n        </div>\\n    </div>\\n    <div class=\\\"container-text\\\">\\n        <div class=\\\"label\\\">\";\n  if (helper = helpers.taskLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.taskLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"remove\\\" class=\\\"icon-result-nok\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"remove\", options) : helperMissing.call(depth0, \"__\", \"remove\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"action-group action-bottom\\\">\\n        <span data-role=\\\"notify\\\" class=\\\"icon-preview\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"notify me when done\", options) : helperMissing.call(depth0, \"__\", \"notify me when done\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"download\\\" class=\\\"icon-download\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"download\", options) : helperMissing.call(depth0, \"__\", \"download\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"redirect\\\" class=\\\"icon-external\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"go to resource\", options) : helperMissing.call(depth0, \"__\", \"go to resource\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"report\\\" class=\\\"icon-document\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"see report\", options) : helperMissing.call(depth0, \"__\", \"see report\", options)))\n    + \"\\\"/>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/element',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/element',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'tpl!taoTaskQueue/component/listing/tpl/element',\n    'css!taoTaskQueue/component/listing/css/element'\n], function ($, _, __, moment, component, hider, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var _allowedStatus = ['in_progress', 'failed', 'completed'];\n\n    var _categoryMap = {\n        import : 'import',\n        export : 'export',\n        delivery_comp : 'delivery',\n        transfer : 'connect',\n        create : 'magicwand',\n        update : 'edit',\n        delete : 'bin'\n    };\n\n    var _statusIcon = {\n        in_progress : 'property-advanced',\n        completed: 'result-ok',\n        failed: 'result-nok',\n    };\n\n    /**\n     * Get the task name to be displayed to the user\n     * @param {Object} data - the standard task object\n     * @returns {String}\n     */\n    var getLabelString = function getLabelString(data){\n        return data.taskLabel;\n    };\n\n    /**\n     * Get the formatted duration string\n     * @param {Number} from - the start time in unix timestamp\n     * @param {Number} elapsed - the duration in seconds\n     * @returns {Number}\n     */\n    var getFormattedTime = function getFormattedTime(from, elapsed){\n        return moment.unix(from).from(moment.unix(parseInt(from, 10)+parseInt(elapsed, 10)));\n    };\n\n    /**\n     * Get the formatted time string according to the current task data\n     * @param data - the standard task object\n     * @returns {String}\n     */\n    var getTimeString = function getTimeString(data){\n        switch(data.status){\n            case 'created':\n            case 'in_progress':\n                return __('Started %s', getFormattedTime(data.createdAt, data.createdAtElapsed));\n            case 'completed':\n                return __('Completed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            case 'failed':\n                return __('Failed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            default:\n                return '';\n        }\n    };\n\n    /**\n     * Get the appropriate icon according to the task data\n     * @param {Object} data - the standard task object\n     * @returns {string}\n     */\n    var getIcon = function getIcon(data){\n        var icon;\n        if(!_.isPlainObject(data)){\n            throw new Error('invalid data');\n        }\n        if(data.category && _categoryMap[data.category]){\n            icon = _categoryMap[data.category];\n        }else if(data.status && _statusIcon[data.status]){\n            icon = _statusIcon[data.status];\n        }else {\n            icon = _statusIcon.in_progress;\n        }\n        return 'icon-'+icon;\n    };\n\n    var taskElementApi = {\n\n        /**\n         * Get the id of the task element\n         * @returns {String}\n         */\n        getId : function getId(){\n            if(this.data && this.data.id){\n                return this.data.id;\n            }\n        },\n\n        /**\n         * Get the status of the task element\n         * @returns {String}\n         */\n        getStatus : function getStatus(){\n            if(this.data && this.data.status){\n                return this.data.status;\n            }\n        },\n\n        /**\n         * Get the data of the task element\n         * @returns {Object}\n         */\n        getData : function getData(){\n            return this.data;\n        },\n\n        /**\n         * Update the data and rendering of it\n         * @param data\n         * @returns {taskElement}\n         */\n        update : function update(data){\n            var $container = this.getElement();\n\n            _.assign(this.data || {}, data);\n\n            $container.find('.shape > span').removeAttr('class').addClass(getIcon(this.data));\n            $container.find('.label').html(getLabelString(this.data));\n            $container.find('.time').html(getTimeString(this.data));\n\n            this.setStatus(this.data.status);\n            //bonus: check if there is any report and display the report button only when needed\n\n            hider.toggle($container.find('.action-bottom [data-role=\"download\"]'), this.data.hasFile);\n            hider.toggle($container.find('.action-bottom [data-role=\"redirect\"]'), !!this.data.redirectUrl);\n\n            this.trigger('update');\n            return this;\n        },\n\n        /**\n         * Add transition to highlight the element (useful after an update for instance)\n         * @returns {taskElement}\n         */\n        highlight : function highlight(){\n            var $container = this.getElement();\n            $container.addClass('highlight');\n            _.delay(function(){\n                $container.removeClass('highlight');\n            }, 500);\n            return this;\n        },\n\n        /**\n         * Set the status of the task element\n         * @param {String} status\n         * @returns {taskElement}\n         */\n        setStatus : function setStatus(status){\n            var self = this;\n            if(!status){\n                throw new Error('status should not be empty');\n            }\n\n            if(['created'].indexOf(status) !== -1){\n                status = 'in_progress';\n            }\n\n            if(_allowedStatus.indexOf(status) === -1){\n                throw new Error('unknown status '+status);\n            }\n            if(!this.is(status)){\n                _.forEach(_.without(_allowedStatus, status), function(st){\n                    self.setState(st, false);\n                });\n                this.setState(status, true);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskElement} the component\n     *\n     * @event remove - Emitted when the element requests to be removed\n     * @event download - Emitted when the element requests downloading its associated file\n     * @event report - Emitted when a list element requests its related report to be displayed\n     * @event update - Emitted when the display update is done\n     */\n    return function taskElementFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskElement\n         */\n        return component(taskElementApi)\n            .setTemplate(elementTpl)\n            .on('init', function(){\n                this.data = data || {};\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"download\"]').click(function(){\n                    self.trigger('download');\n                });\n                $component.find('[data-role=\"remove\"]').click(function(){\n                    self.trigger('remove');\n                });\n                $component.find('[data-role=\"report\"]').click(function(){\n                    self.trigger('report');\n                });\n                $component.find('[data-role=\"redirect\"]').click(function(){\n                    self.trigger('redirect');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/report', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-detail-element\\\">\\n    <div class=\\\"detail-description\\\">\\n        <span class=\\\"label\\\"></span>\\n        <span class=\\\"time\\\"></span>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"close\\\" class=\\\"icon-compress\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"close report\", options) : helperMissing.call(depth0, \"__\", \"close report\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"detail-body\\\">\\n    </div>\\n    <div class=\\\"no-detail\\\">\\n        <span class=\\\"message\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No report available\", options) : helperMissing.call(depth0, \"__\", \"No report available\", options)))\n    + \"</span>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/report',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/report',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'ui/report',\n    'tpl!taoTaskQueue/component/listing/tpl/report',\n    'css!taoTaskQueue/component/listing/css/report'\n], function ($, _, __, moment, component, hider, reportFactory, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var reportElementApi = {\n        /**\n         * Update the task report with the data\n         * @param {Object} data - the standard task log data\n         * @param {String} data.taskLabel - the task name to be displayed to user\n         * @param {Object} data.report - the standard report object\n         */\n        update : function update(data){\n\n            var $component = this.getElement();\n            $component.find('.label').html(data.taskLabel);\n\n            //set report here\n            if(data.report && _.isArray(data.report.children) && data.report.children.length){\n                this.setState('noreport', false);\n                reportFactory({replace:true}, data.report.children[0]).render($component.find('.detail-body'));\n            }else{\n                this.setState('noreport', true);\n            }\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskReport} the component\n     *\n     * @event close - Emitted when the report needs to be closed\n     */\n    return function taskReportFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskReport\n         */\n        return component(reportElementApi)\n            .setTemplate(elementTpl)\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"close\"]').click(function(){\n                    self.trigger('close');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-listing\\\">\\n    <div class=\\\"box\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"description\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"empty-placeholder\\\">\";\n  if (helper = helpers.emptyText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.emptyText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <ul class=\\\"task-list plain\\\"></ul>\\n        <div class=\\\"clear-box\\\">\\n            <a class=\\\"clear-all\\\" href=\\\"#\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished tasks\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished tasks\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished\", options)))\n    + \"</a>\\n        </div>\\n        <div class=\\\"view-detail\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/elementWrapper', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/listing/css/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/list',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'taoTaskQueue/component/listing/element',\n    'tpl!taoTaskQueue/component/listing/tpl/list',\n    'tpl!taoTaskQueue/component/listing/tpl/elementWrapper',\n    'css!taoTaskQueue/component/listing/css/list'\n], function ($, _, __, component, listElementFactory, listTpl, elementWrapperTpl) {\n    'use strict';\n\n    var _defaults = {\n        title : 'Task List',\n        emptyText : __('The list is currently empty.')\n    };\n\n    var listApi = {\n        /**\n         * Remove a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        removeElement : function removeElement(listElement){\n            listElement.destroy();\n            this.getElement().find('ul li[data-id=\"'+listElement.getId()+'\"]').remove();\n            return this;\n        },\n\n        /**\n         * Insert a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        insertElement : function insertElement(listElement){\n            var id = listElement.getId();\n            var $li = $(elementWrapperTpl({\n                id : id\n            }));\n            this.getElement().find('ul').prepend($li);\n            listElement.render($li);\n            return this;\n        },\n\n        /**\n         * Show the detail\n         * @param {taoTaskQueue/component/listing/report} detailElement - the detail element to be shown\n         * @param {Booleam} [show] - should the detail of an element be immediately shown or not\n         * @returns {taskList}\n         */\n        setDetail : function setDetail(detailElement, show){\n            detailElement.render(this.getElement().find('.view-detail'));\n            if(show){\n                this.setState('detail-view', true);\n            }\n            return this;\n        },\n\n        /**\n         * Hide the detail panel and display the default list view again\n         * @returns {taskList}\n         */\n        hideDetail : function hideDetail(){\n            this.setState('detail-view', false);\n            return this;\n        },\n\n        /**\n         * Scroll to the top of the list\n         * @returns {taskList}\n         */\n        scrollToTop : function scrollToTop(){\n            this.getElement().find('.task-list').get(0).scrollTo(0, 0);\n            return this;\n        },\n\n        /**\n         * Animate the insertion tset emphasis on it\n         * @param listElement\n         * @returns {taskList}\n         */\n        animateInsertion : function animateInsertion(listElement){\n            var $listElement = listElement.getElement();\n            var $container = $listElement.parent();\n            $container.addClass('inserting');\n            $listElement.addClass('new-element');\n            _.delay(function(){\n                $container.removeClass('inserting');\n                _.delay(function(){\n                    $listElement.removeClass('new-element');\n                }, 400);\n            },100);\n            return this;\n        }\n    };\n\n    /**\n     * Builds a simple task list component\n     *\n     * @param {Object} config - the component config\n     * @returns {taskList} the component\n     */\n    return function taskListFactory(config) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskList\n         */\n        return component(listApi)\n            .setTemplate(listTpl)\n            .on('render', function(){\n                var self = this;\n                this.getElement().find('.clear-all').on('click', function(e){\n                    e.preventDefault();\n                    self.trigger('clearall');\n                });\n            })\n            .init(initConfig);\n    };\n\n});\n\n","\ndefine('tpl!taoTaskQueue/component/manager/tpl/manager', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-manager-container\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Background tasks\", options) : helperMissing.call(depth0, \"__\", \"Background tasks\", options)))\n    + \"\\\">\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoTaskQueue/component/manager/css/manager',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/manager/manager',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'layout/loading-bar',\n    'ui/hider',\n    'ui/component',\n    'ui/badge/badge',\n    'ui/component/alignable',\n    'ui/animable/absorbable/absorbable',\n    'ui/animable/pulsable/pulsable',\n    'taoTaskQueue/component/listing/element',\n    'taoTaskQueue/component/listing/report',\n    'taoTaskQueue/component/listing/list',\n    'tpl!taoTaskQueue/component/manager/tpl/manager',\n    'css!taoTaskQueue/component/manager/css/manager'\n], function ($, _, __, loadingBar, hider, component, badgeFactory, makeAlignable, makeAbsorbable, makePulsable, listElementFactory, reportElementFactory, taskListFactory, managerTpl) {\n    'use strict';\n\n    /**\n     * Transform the task log summary into a configuration set for the badge\n     * @param {Object} tasksStatuses - the task log summary\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromStatus = function getBadgeDataFromStatus(tasksStatuses){\n        var total =  0;\n        var data = {loading : false};\n        if(tasksStatuses){\n            if(tasksStatuses.numberOfTasksInProgress){\n                total += parseInt(tasksStatuses.numberOfTasksInProgress, 10);\n                data.type = 'info';\n                data.loading = (tasksStatuses.numberOfTasksInProgress > 0);\n            }\n            if(tasksStatuses.numberOfTasksCompleted){\n                total += parseInt(tasksStatuses.numberOfTasksCompleted, 10);\n                data.type = 'success';\n            }\n            if(tasksStatuses.numberOfTasksFailed){\n                total += parseInt(tasksStatuses.numberOfTasksFailed, 10);\n                if(data.type === 'success'){\n                    data.type = 'warning';//if there are both success and failures, the status should be a warning\n                }else{\n                    data.type = 'error';\n                }\n            }\n            data.value = total;\n            return data;\n        }\n    };\n\n    /**\n     * Transform the internal list of elements into a configuration set for the badge\n     * @param {Object} elements - internal collection of task elements\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromElements = function getBadgeDataFromElements(elements){\n\n        var statusMap = {\n            in_progress: 'numberOfTasksInProgress',\n            created: 'numberOfTasksInProgress',\n            failed: 'numberOfTasksFailed',\n            completed: 'numberOfTasksCompleted',\n        };\n\n        var stats = {\n            numberOfTasksFailed : 0,\n            numberOfTasksCompleted : 0,\n            numberOfTasksInProgress : 0\n        };\n\n        _.forEach(elements, function(element){\n            var status = element.getStatus();\n            if(statusMap[status]){\n                //it is a know state, so add to the stats array\n                stats[statusMap[status]]++;\n            }\n        });\n\n        return getBadgeDataFromStatus(stats);\n    };\n\n    /**\n     * The collection of config used for component alignments\n     * the values have been adjusted to make it work well with the list's css\n     * @type {Object}\n     * @private\n     */\n    var _alignementConfig = {\n        initial : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156\n        },\n        showDetail : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156-121\n        }\n    };\n\n    var taskQueue = {\n\n        /**\n         * Get the list of task elements\n         * @returns {taskQueueManager} - self for chaining\n         */\n        getTaskElements : function getTaskElements(){\n            return this.taskElements;\n        },\n\n        /**\n         * Show the details associated to a task\n         * @param {Object} tasksData - a single task data to view the report form\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showDetail : function showDetail(taskData){\n            var $component = this.getElement();\n            var list = this.list;\n            var reportElement = reportElementFactory({replace:true}, taskData)\n                .on('close', function(){\n                    list.hideDetail();\n                    list.alignWith($component, _alignementConfig.initial);\n                    this.destroy();\n                });\n            list.setDetail(reportElement, true);\n            list.alignWith($component, _alignementConfig.showDetail);\n            return this;\n        },\n\n        /**\n         * Add a new task\n         * @param {Object} tasksData - a single task data to be added to the list\n         * @param {Boolean} [animate=false] - tells if the new task addition should be made through a smooth transition effect\n         * @returns {taskQueueManager} - self for chaining\n         */\n        addNewTask : function addNewTask(taskData, animate){\n            var self = this;\n            var taskId = taskData.id;\n            var listElement = listElementFactory({}, taskData)\n                .on('remove', function(){\n                    delete self.taskElements[taskId];\n                    self.list.removeElement(listElement);\n                    self.trigger('remove', taskId);\n                    self.trigger('listchange');\n                })\n                .on('report', function(){\n                    self.trigger('report', taskId);\n                })\n                .on('download', function(){\n                    self.trigger('download', taskId);\n                })\n                .on('redirect', function(){\n                    loadingBar.start();\n\n                    self.hideList();\n\n                    self.trigger('redirect', taskId);\n                });\n\n\n            if(animate){\n                if(this.list.is('hidden')){\n                    this.list.show();\n                }\n                this.list.scrollToTop();\n            }\n            this.list.insertElement(listElement);\n            this.taskElements[taskId] = listElement;\n            this.trigger('listchange');\n\n            if(animate){\n                this.list.animateInsertion(listElement);\n            }\n            return this;\n        },\n\n        /**\n         * Update the badge display according to the current status of the tasks in the list\n         * @returns {taskQueueManager} - self for chaining\n         */\n        selfUpdateBadge : function selfUpdateBadge(){\n            var badgeData = getBadgeDataFromElements(this.getTaskElements());\n            if(!this.badge){\n                this.badge = makePulsable(badgeFactory(badgeData)).render(this.getElement());\n            }else{\n                this.badge.update(badgeData);\n            }\n            return this;\n        },\n\n        /**\n         * Load the the array of task element data requested form the server REST API\n         * @param {Array} tasksData - the task data to be loaded from the server REST API call\n         * @returns {taskQueueManager} - self for chaining\n         */\n        loadData : function loadData(tasksData){\n            var self = this;\n            var found = [];\n            if (tasksData.length) {\n                tasksData = tasksData.reverse();\n            }\n            _.forEach(tasksData, function(entry){\n                var id = entry.id;\n                if(self.taskElements[id]){\n                    //update\n                    self.taskElements[id].update(entry);\n                    if(self.taskElements[id].getStatus() !== entry.status){\n                        //highlight status change only\n                        self.taskElements[id].highlight();\n                    }\n                }else{\n                    //create\n                    self.addNewTask(entry);\n                }\n                found.push(id);\n            });\n\n            //remove any element from the list that are not found in the new data collection (task has been archived server side)\n            _.forEach(_.difference(_.keys(self.taskElements), found), function(id){\n                self.list.removeElement(self.taskElements[id]);\n                delete self.taskElements[id];\n            });\n\n            this.trigger('listchange');\n            return this;\n        },\n\n        /**\n         * Trigger the pulse animation on the status badge\n         * @returns {taskQueueManager} - self for chaining\n         */\n        pulse : function pulse(){\n            if(this.badge){\n                this.badge.pulse(3);\n            }\n            return this;\n        },\n\n        /**\n         * Show the list component\n         * @event listshow - Emitted when the list is displayed\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showList : function showList() {\n            if (this.list) {\n                this.list.show();\n                this.trigger('listshow');\n            }\n            return this;\n        },\n\n        /**\n         * Hide the list component\n         * @event listhide - Emitted when the list is hidden\n         * @returns {taskQueueManager} - self for chaining\n         */\n        hideList : function hideList() {\n            if (this.list) {\n                this.list.hide();\n                this.trigger('listhide');\n            }\n            return this;\n        },\n\n        /**\n         * Remove all finished element (completed or failed) from the list\n         * @returns {taskQueueManager}\n         */\n        removeAllFinished : function removeAllFinished(){\n\n            var self = this;\n\n            _(this.taskElements).filter(function(element){\n                return (element.getStatus() === 'completed' || element.getStatus() === 'failed');\n            }).forEach(function(element){\n                delete self.taskElements[element.getId()];\n                self.list.removeElement(element);\n                self.trigger('listchange');\n            });\n\n            this.trigger('listclearfinished');\n            return this;\n        },\n\n        /**\n         * Toggle the visibility of the clear all button according to the element status\n         * @returns {taskQueueManager}\n         */\n        selfUpdateClearButton : function selfUpdateClearButton(){\n            var $clearAllBox = this.getElement().find('.clear-box');\n            var finishedCount = _(this.taskElements).map(function(element){\n                return element.getStatus();\n            }).filter(function(status){\n                return (status === 'completed' || status === 'failed');\n            }).size();\n            if(finishedCount > 0){\n                //show button\n                hider.show($clearAllBox);\n            }else{\n                hider.hide($clearAllBox);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds the task queue manager\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskQueueManager} the component\n     *\n     * @event remove - Emitted when a list element is removed\n     * @event download - Emitted when a list element requests the file download associated to a completed task\n     * @event report - Emitted when a list element requests a task report to be displayed\n     * @event redirect - Emitted when a list element requests a redirection to the created resource\n     * @event listchange - Emitted when the list element list has been updated\n     * @event listclearfinished - Emitted when all the finished element from the list is removed\n     */\n    return function taskQueueManagerFactory(config, data) {\n\n        data = data || {};\n\n        /**\n         * The component\n         * @typedef {ui/component} taskQueueManager\n         */\n        return makeAbsorbable(component(taskQueue))\n            .setTemplate(managerTpl)\n            .on('destroy listhide', function(){\n                $(document).off('click.task-queue-manager');\n            })\n            .on('init', function() {\n                //initialize the task element collection\n                this.taskElements = {};\n\n                //create the list\n                this.list = makeAlignable(taskListFactory())\n                    .init({\n                        title : __('Background tasks'),\n                        emptyText : __('There is currently no background task'),\n                    });\n            })\n            .on('listshow', function(){\n                var self = this;\n                var $component = this.getElement();\n                //close the popup when clicking outside of the component\n                $(document).off('click.task-queue-manager').on('click.task-queue-manager', function(e){\n                    if($component.get(0) !== e.target && !$.contains($component.get(0), e.target)){\n                        if(!self.list.is('hidden')){\n                            self.hideList();\n                        }\n                    }\n                });\n            })\n            .on('listchange', function(){\n                this.selfUpdateBadge();\n                this.selfUpdateClearButton();\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $trigger = this.getElement();\n\n                //position the list\n                this.list.render($trigger)\n                    .moveBy(0, 0)\n                    .alignWith($trigger, _alignementConfig.initial)\n                    .hide();//start hidden\n\n                //load initial data\n                this.loadData(data);\n\n                //prevent closing the panel when clicking on it\n                this.list.getElement()\n                    .addClass('overflown-element')\n                    .on('click', function(e){\n                        e.stopPropagation();\n                    });\n\n                this.list.on('clearall', function(){\n                    self.removeAllFinished();\n                });\n\n                //toggle list visibility\n                $trigger.on('click', function(){\n                    if(self.list.is('hidden')){\n                        self.showList();\n                    }else{\n                        self.hideList();\n                    }\n                });\n\n            })\n            .init(config || {});\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoTaskQueue/controller/main',[\n    'jquery',\n    'taoTaskQueue/component/manager/manager',\n    'ui/taskQueue/taskQueue'\n],\nfunction ($, taskQueueManagerFactory, taskQueue) {\n    'use strict';\n\n    /**\n     * This controller initialize all the task queue component globally for tao backoffice use\n     * @exports taoTaskQueue/controller/main\n     */\n    return {\n        start() {\n\n            const taskManager = taskQueueManagerFactory({\n                replace: true\n            })\n            .on('remove', taskId => taskQueue.archive(taskId) )\n            .on('report', taskId => {\n                //show report in popup\n                taskQueue.get(taskId).then( task => taskManager.showDetail(task) );\n            })\n            .on('download', taskId => taskQueue.download(taskId) )\n            .on('redirect', taskId => taskQueue.redirect(taskId) )\n            .on('listclearfinished', () => {\n                taskQueue\n                    .pollAllStop()\n                    .archive('all')\n                    .then( () => taskQueue.pollAll() );\n            })\n            .render($('#taskqueue').parent())\n            .hide();//start hidden to prevent blinking effect\n\n            //listen to events started by the task queue model\n            taskQueue\n                .on('taskcreated', data => {\n                    if (taskManager.list.is('hidden')) {\n                        taskManager.absorbBurst(data.sourceDom, [0, 300, 600]).then( () => {\n                            taskManager.addNewTask(data.task);\n                            taskQueue.pollAll();\n                        });\n                    } else {\n                        taskManager.addNewTask(data.task, true);\n                        taskQueue.pollAll();\n                    }\n                })\n                .on('multitaskstatuschange', () =>  taskManager.pulse() )\n                .on('pollAll', tasks => {\n                    if (taskManager.is('hidden')) {\n                        taskManager.show();\n                    }\n                    taskManager.loadData(tasks);\n                })\n                .pollAll(true);//start polling immediately on load\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoTaskQueue/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'taoTaskQueue/controller/main'\n            }\n        }\n    };\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('div.task-element{position:relative;background:#f3f1ef;padding:10px 20px;width:100%;height:70px;-webkit-transition:background, 2s, ease-out, 0s;-moz-transition:background, 2s, ease-out, 0s;-ms-transition:background, 2s, ease-out, 0s;-o-transition:background, 2s, ease-out, 0s;transition:background, 2s, ease-out, 0s}div.task-element.highlight{background:white;-webkit-transition:background, 0s, ease-out, 0s;-moz-transition:background, 0s, ease-out, 0s;-ms-transition:background, 0s, ease-out, 0s;-o-transition:background, 0s, ease-out, 0s;transition:background, 0s, ease-out, 0s}div.task-element .container-icon{position:absolute}div.task-element .container-icon .shape{display:inline-block;border-radius:50%;width:40px;height:40px;top:2px;position:relative}div.task-element .container-icon .shape [class^=\\\"icon-\\\"],div.task-element .container-icon .shape [class*=\\\" icon-\\\"]{font-size:20px;font-size:2rem;position:relative;top:9px;left:12px;text-shadow:none}div.task-element .container-icon .shape .icon-export,div.task-element .container-icon .shape .icon-import,div.task-element .container-icon .shape .icon-connect{left:10px}div.task-element .container-icon .shape .icon-property-advanced,div.task-element .container-icon .shape .icon-result-ok,div.task-element .container-icon .shape .icon-result-nok{top:10px;left:10px}div.task-element.in_progress .container-icon .shape{background:#0e5d91}div.task-element.in_progress .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.in_progress .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7eff4}div.task-element.in_progress .action-group.action-bottom [data-role=\\\"notify\\\"]{display:none}div.task-element.in_progress .action-group.action-top [data-role=\\\"remove\\\"]{display:none}div.task-element.completed .container-icon .shape{background:#0e914b}div.task-element.completed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.completed .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7f4ed}div.task-element.completed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"report\\\"],div.task-element.completed .action-group.action-bottom [data-role=\\\"redirect\\\"]{display:inline-block}div.task-element.failed .container-icon .shape{background:#ba122b}div.task-element.failed .container-icon .shape [class^=\\\"icon-\\\"],div.task-element.failed .container-icon .shape [class*=\\\" icon-\\\"]{color:#f8e7ea}div.task-element.failed .action-group.action-bottom [data-role=\\\"download\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"report\\\"],div.task-element.failed .action-group.action-bottom [data-role=\\\"redirect\\\"]{display:inline-block}div.task-element .container-text{padding-top:0px;margin-left:60px;width:240px}div.task-element .container-text .label{min-height:22px;max-height:38px;overflow:hidden;color:#222}div.task-element .container-text .time{color:#92918f;font-size:12px;font-size:1.2rem}div.task-element .action-group{position:absolute}div.task-element .action-group [class^=\\\"icon-\\\"],div.task-element .action-group [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-element .action-group [class^=\\\"icon-\\\"]:hover,div.task-element .action-group [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-element .action-group.action-top{top:6px;right:14px}div.task-element .action-group.action-bottom{bottom:6px;right:12px}div.task-element .action-group.action-bottom [class^=\\\"icon-\\\"],div.task-element .action-group.action-bottom [class*=\\\" icon-\\\"]{display:none}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/listing/css/element.css.map */div.task-detail-element{position:relative;padding:10px 20px;width:600px;min-height:250px;background:#f3f1ef}div.task-detail-element .detail-description .label{margin-right:4px;color:#222;font-weight:bold}div.task-detail-element .detail-description .time{margin-left:4px;color:#92918f;font-size:12px;font-size:1.2rem}div.task-detail-element .detail-body{max-height:500px;overflow-y:auto;padding:10px 0}div.task-detail-element .action-top{position:absolute;top:9px;right:14px}div.task-detail-element .action-top [class^=\\\"icon-\\\"],div.task-detail-element .action-top [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;color:#222;background-color:transparent;width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-detail-element .action-top [class^=\\\"icon-\\\"]:hover,div.task-detail-element .action-top [class*=\\\" icon-\\\"]:hover{opacity:0.6}div.task-detail-element .no-detail{display:none}div.task-detail-element.noreport .no-detail{display:block;color:#92918f}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/listing/css/report.css.map */div.task-listing{position:relative;cursor:default;padding-top:0px}div.task-listing div.box{position:relative;min-height:76px;min-width:360px;background:#f3f1ef;-webkit-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-moz-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-ms-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);-o-box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);box-shadow:0 3px 6px 0px rgba(0,0,0,0.6);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}div.task-listing div.box .description{padding:2px 20px;background:#dbd9d7;color:#222;font-weight:bold;border-bottom:solid 1px #ddd;min-height:8px}div.task-listing div.box .arrow{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg);border:1px #ddd solid;border-right:none;border-bottom:none;width:16px;height:16px;background:#dbd9d7;color:#222;position:absolute;right:14px;top:-9px}div.task-listing div.box ul.task-list{position:relative;top:0;left:0;right:0;opacity:1;padding:0 !important;border:none;max-height:460px;overflow:auto;background:#c2c1bf;position:relative}div.task-listing div.box ul.task-list li{position:relative;width:100%;max-height:100px;color:#222;background:#c2c1bf}div.task-listing div.box ul.task-list li:not(:last-child){border-bottom:solid 1px #dbd9d7}div.task-listing div.box ul.task-list li.inserting{max-height:0;-webkit-transition:max-height, .5s, ease-out, 0s;-moz-transition:max-height, .5s, ease-out, 0s;-ms-transition:max-height, .5s, ease-out, 0s;-o-transition:max-height, .5s, ease-out, 0s;transition:max-height, .5s, ease-out, 0s}div.task-listing div.box ul.task-list li.inserting .task-element{height:0px}div.task-listing div.box ul.task-list li.inserted{min-height:70px}div.task-listing div.box ul.task-list li .task-element{transform:scaleY(1);-webkit-transition:scaleY, .6s, ease-out, 0s;-moz-transition:scaleY, .6s, ease-out, 0s;-ms-transition:scaleY, .6s, ease-out, 0s;-o-transition:scaleY, .6s, ease-out, 0s;transition:scaleY, .6s, ease-out, 0s}div.task-listing div.box ul.task-list li .task-element.new-element{transform-origin:20% 0;transform:scaleY(0)}div.task-listing div.box .clear-box{text-align:center;border-top:solid 1px #ddd;background:#eceae8;padding:2px 0}div.task-listing div.box .clear-box .clear-all{text-decoration:none;color:#3e7da7}div.task-listing div.box .clear-box .clear-all:hover{text-decoration:underline;color:#0e5d91}div.task-listing div.box .empty-placeholder{width:100%;position:absolute;top:25px;padding:12px 20px;font-style:italic;color:#222}div.task-listing div.box .view-detail{display:none}div.task-listing.detail-view .box .task-list,div.task-listing.detail-view .box .clear-box{display:none}div.task-listing.detail-view .box .view-detail{display:block;position:relative}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/listing/css/list.css.map */.task-manager-container{cursor:pointer;position:relative;width:40px;height:64px;background-color:transparent;padding:22px 8px 0px}.task-manager-container:hover{-webkit-transition:background-color 0.2s ease;-moz-transition:background-color 0.2s ease;-ms-transition:background-color 0.2s ease;-o-transition:background-color 0.2s ease;transition:background-color 0.2s ease;background-color:rgba(14,93,145,0.5);text-decoration:none}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box{box-shadow:none;border-color:#eee}.dark-bar nav .settings-menu:hover ~ .persistent-menu .task-listing .box .arrow{display:none}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/manager/css/manager.css.map */');\n","\ndefine(\"taoTaskQueue/loader/taoTaskQueue.bundle\", function(){});\n"]}