{"version":3,"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","compilerInfo","merge","stack1","helper","options","buffer","functionType","escapeExpression","helperMissing","status","call","hash","icon","taskLabel","time","__","$","_","moment","component","hider","elementTpl","_defaults","_allowedStatus","_categoryMap","import","export","delivery_comp","transfer","create","update","delete","_statusIcon","in_progress","completed","failed","getLabelString","getFormattedTime","from","elapsed","unix","parseInt","getTimeString","createdAt","createdAtElapsed","updatedAt","updatedAtElapsed","getIcon","isPlainObject","Error","category","taskElementApi","getId","id","getStatus","getData","$container","getElement","assign","find","removeAttr","addClass","html","setStatus","toggle","hasFile","redirectUrl","hasExternalUriLink","trigger","highlight","delay","removeClass","self","indexOf","is","forEach","without","st","setState","taskElementFactory","config","initConfig","defaults","setTemplate","on","$component","click","init","reportFactory","reportElementApi","report","isArray","children","length","replace","render","taskReportFactory","title","emptyText","listElementFactory","listTpl","elementWrapperTpl","listApi","removeElement","listElement","destroy","remove","insertElement","$li","prepend","setDetail","detailElement","show","hideDetail","scrollToTop","get","scrollTo","animateInsertion","$listElement","parent","taskListFactory","e","preventDefault","loadingBar","badgeFactory","makeAlignable","makeAbsorbable","makePulsable","reportElementFactory","managerTpl","getBadgeDataFromStatus","tasksStatuses","total","loading","numberOfTasksInProgress","type","numberOfTasksCompleted","numberOfTasksFailed","value","getBadgeDataFromElements","elements","statusMap","created","stats","element","_alignementConfig","initial","hPos","hOrigin","vPos","vOrigin","hOffset","showDetail","taskQueue","getTaskElements","taskElements","taskData","list","reportElement","alignWith","addNewTask","animate","taskId","start","hideList","selfUpdateBadge","badgeData","badge","loadData","tasksData","found","reverse","entry","push","difference","keys","pulse","showList","hide","removeAllFinished","filter","selfUpdateClearButton","$clearAllBox","finishedCount","map","size","taskQueueManagerFactory","document","off","target","contains","$trigger","moveBy","stopPropagation","taskManager","archive","then","task","download","redirect","pollAllStop","pollAll","absorbBurst","sourceDom","tasks","Main","actions","index","c","d","a","i","s","createElement","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode"],"sources":["../component/listing/tpl/element!tpl","../component/listing/css/element!css","../component/listing/element.js","../component/listing/tpl/report!tpl","../component/listing/css/report!css","../component/listing/report.js","../component/listing/tpl/list!tpl","../component/listing/tpl/elementWrapper!tpl","../component/listing/css/list!css","../component/listing/list.js","../component/manager/tpl/manager!tpl","../component/manager/css/manager!css","../component/manager/manager.js","../controller/main.js","../controller/routes.js","onLayerEnd0.js","module-create.js"],"sourcesContent":["\ndefine('tpl!taoTaskQueue/component/listing/tpl/element', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-element \";\n  if (helper = helpers.status) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.status); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"container-icon\\\">\\n        <div class=\\\"shape\\\">\\n            <span class=\\\"\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n        </div>\\n    </div>\\n    <div class=\\\"container-text\\\">\\n        <div class=\\\"label\\\">\";\n  if (helper = helpers.taskLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.taskLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"time\\\">\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"remove\\\" class=\\\"icon-result-nok\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"remove\", options) : helperMissing.call(depth0, \"__\", \"remove\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"action-group action-bottom\\\">\\n        <span data-role=\\\"notify\\\" class=\\\"icon-preview\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"notify me when done\", options) : helperMissing.call(depth0, \"__\", \"notify me when done\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"download\\\" class=\\\"icon-download\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"download\", options) : helperMissing.call(depth0, \"__\", \"download\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"redirect\\\" class=\\\"icon-external\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"go to resource\", options) : helperMissing.call(depth0, \"__\", \"go to resource\", options)))\n    + \"\\\"/>\\n        <span data-role=\\\"report\\\" class=\\\"icon-document\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"see report\", options) : helperMissing.call(depth0, \"__\", \"see report\", options)))\n    + \"\\\"/>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoTaskQueue/component/listing/css/element',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/element',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'tpl!taoTaskQueue/component/listing/tpl/element',\n    'css!taoTaskQueue/component/listing/css/element'\n], function ($, _, __, moment, component, hider, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var _allowedStatus = ['in_progress', 'failed', 'completed'];\n\n    var _categoryMap = {\n        import : 'import',\n        export : 'export',\n        delivery_comp : 'delivery',\n        transfer : 'connect',\n        create : 'magicwand',\n        update : 'edit',\n        delete : 'bin'\n    };\n\n    var _statusIcon = {\n        in_progress : 'property-advanced',\n        completed: 'result-ok',\n        failed: 'result-nok',\n    };\n\n    /**\n     * Get the task name to be displayed to the user\n     * @param {Object} data - the standard task object\n     * @returns {String}\n     */\n    var getLabelString = function getLabelString(data){\n        return data.taskLabel;\n    };\n\n    /**\n     * Get the formatted duration string\n     * @param {Number} from - the start time in unix timestamp\n     * @param {Number} elapsed - the duration in seconds\n     * @returns {Number}\n     */\n    var getFormattedTime = function getFormattedTime(from, elapsed){\n        return moment.unix(from).from(moment.unix(parseInt(from, 10)+parseInt(elapsed, 10)));\n    };\n\n    /**\n     * Get the formatted time string according to the current task data\n     * @param data - the standard task object\n     * @returns {String}\n     */\n    var getTimeString = function getTimeString(data){\n        switch(data.status){\n            case 'created':\n            case 'in_progress':\n                return __('Started %s', getFormattedTime(data.createdAt, data.createdAtElapsed));\n            case 'completed':\n                return __('Completed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            case 'failed':\n                return __('Failed %s', getFormattedTime(data.updatedAt, data.updatedAtElapsed));\n            default:\n                return '';\n        }\n    };\n\n    /**\n     * Get the appropriate icon according to the task data\n     * @param {Object} data - the standard task object\n     * @returns {string}\n     */\n    var getIcon = function getIcon(data){\n        var icon;\n        if(!_.isPlainObject(data)){\n            throw new Error('invalid data');\n        }\n        if(data.category && _categoryMap[data.category]){\n            icon = _categoryMap[data.category];\n        }else if(data.status && _statusIcon[data.status]){\n            icon = _statusIcon[data.status];\n        }else {\n            icon = _statusIcon.in_progress;\n        }\n        return 'icon-'+icon;\n    };\n\n    var taskElementApi = {\n\n        /**\n         * Get the id of the task element\n         * @returns {String}\n         */\n        getId : function getId(){\n            if(this.data && this.data.id){\n                return this.data.id;\n            }\n        },\n\n        /**\n         * Get the status of the task element\n         * @returns {String}\n         */\n        getStatus : function getStatus(){\n            if(this.data && this.data.status){\n                return this.data.status;\n            }\n        },\n\n        /**\n         * Get the data of the task element\n         * @returns {Object}\n         */\n        getData : function getData(){\n            return this.data;\n        },\n\n        /**\n         * Update the data and rendering of it\n         * @param data\n         * @returns {taskElement}\n         */\n        update : function update(data){\n            var $container = this.getElement();\n\n            _.assign(this.data || {}, data);\n\n            $container.find('.shape > span').removeAttr('class').addClass(getIcon(this.data));\n            $container.find('.label').html(getLabelString(this.data));\n            $container.find('.time').html(getTimeString(this.data));\n\n            this.setStatus(this.data.status);\n            //bonus: check if there is any report and display the report button only when needed\n\n            hider.toggle($container.find('.action-bottom [data-role=\"download\"]'), this.data.hasFile);\n            hider.toggle(\n                $container.find('.action-bottom [data-role=\"redirect\"]'),\n                !!this.data.redirectUrl && !this.data.hasExternalUriLink\n            );\n\n            this.trigger('update');\n            return this;\n        },\n\n        /**\n         * Add transition to highlight the element (useful after an update for instance)\n         * @returns {taskElement}\n         */\n        highlight : function highlight(){\n            var $container = this.getElement();\n            $container.addClass('highlight');\n            _.delay(function(){\n                $container.removeClass('highlight');\n            }, 500);\n            return this;\n        },\n\n        /**\n         * Set the status of the task element\n         * @param {String} status\n         * @returns {taskElement}\n         */\n        setStatus : function setStatus(status){\n            var self = this;\n            if(!status){\n                throw new Error('status should not be empty');\n            }\n\n            if(['created'].indexOf(status) !== -1){\n                status = 'in_progress';\n            }\n\n            if(_allowedStatus.indexOf(status) === -1){\n                throw new Error('unknown status '+status);\n            }\n            if(!this.is(status)){\n                _.forEach(_.without(_allowedStatus, status), function(st){\n                    self.setState(st, false);\n                });\n                this.setState(status, true);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskElement} the component\n     *\n     * @event remove - Emitted when the element requests to be removed\n     * @event download - Emitted when the element requests downloading its associated file\n     * @event report - Emitted when a list element requests its related report to be displayed\n     * @event update - Emitted when the display update is done\n     */\n    return function taskElementFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskElement\n         */\n        return component(taskElementApi)\n            .setTemplate(elementTpl)\n            .on('init', function(){\n                this.data = data || {};\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"download\"]').click(function(){\n                    self.trigger('download');\n                });\n                $component.find('[data-role=\"remove\"]').click(function(){\n                    self.trigger('remove');\n                });\n                $component.find('[data-role=\"report\"]').click(function(){\n                    self.trigger('report');\n                });\n                $component.find('[data-role=\"redirect\"]').click(function(){\n                    self.trigger('redirect');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/report', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-detail-element\\\">\\n    <div class=\\\"detail-description\\\">\\n        <span class=\\\"label\\\"></span>\\n        <span class=\\\"time\\\"></span>\\n    </div>\\n    <div class=\\\"action-group action-top\\\">\\n        <span data-role=\\\"close\\\" class=\\\"icon-compress\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"close report\", options) : helperMissing.call(depth0, \"__\", \"close report\", options)))\n    + \"\\\"/>\\n    </div>\\n    <div class=\\\"detail-body\\\">\\n    </div>\\n    <div class=\\\"no-detail\\\">\\n        <span class=\\\"message\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No report available\", options) : helperMissing.call(depth0, \"__\", \"No report available\", options)))\n    + \"</span>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoTaskQueue/component/listing/css/report',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/report',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'ui/component',\n    'ui/hider',\n    'ui/report',\n    'tpl!taoTaskQueue/component/listing/tpl/report',\n    'css!taoTaskQueue/component/listing/css/report'\n], function ($, _, __, moment, component, hider, reportFactory, elementTpl) {\n    'use strict';\n\n    var _defaults = {\n    };\n\n    var reportElementApi = {\n        /**\n         * Update the task report with the data\n         * @param {Object} data - the standard task log data\n         * @param {String} data.taskLabel - the task name to be displayed to user\n         * @param {Object} data.report - the standard report object\n         */\n        update : function update(data){\n\n            var $component = this.getElement();\n            $component.find('.label').html(data.taskLabel);\n\n            //set report here\n            if(data.report && _.isArray(data.report.children) && data.report.children.length){\n                this.setState('noreport', false);\n                reportFactory({replace:true}, data.report.children[0]).render($component.find('.detail-body'));\n            }else{\n                this.setState('noreport', true);\n            }\n        }\n    };\n\n    /**\n     * Builds a task listing element\n     *\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskReport} the component\n     *\n     * @event close - Emitted when the report needs to be closed\n     */\n    return function taskReportFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskReport\n         */\n        return component(reportElementApi)\n            .setTemplate(elementTpl)\n            .on('render', function() {\n\n                var self = this;\n                var $component = this.getElement();\n\n                this.update(data);\n\n                $component.find('[data-role=\"close\"]').click(function(){\n                    self.trigger('close');\n                });\n\n            })\n            .init(initConfig);\n    };\n\n});\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/list', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"task-listing\\\">\\n    <div class=\\\"box\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"description\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"empty-placeholder\\\">\";\n  if (helper = helpers.emptyText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.emptyText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <ul class=\\\"task-list plain\\\"></ul>\\n        <div class=\\\"clear-box\\\">\\n            <a class=\\\"clear-all\\\" href=\\\"#\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished tasks\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished tasks\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Clear all finished\", options) : helperMissing.call(depth0, \"__\", \"Clear all finished\", options)))\n    + \"</a>\\n        </div>\\n        <div class=\\\"view-detail\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoTaskQueue/component/listing/tpl/elementWrapper', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></li>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoTaskQueue/component/listing/css/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/listing/list',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'taoTaskQueue/component/listing/element',\n    'tpl!taoTaskQueue/component/listing/tpl/list',\n    'tpl!taoTaskQueue/component/listing/tpl/elementWrapper',\n    'css!taoTaskQueue/component/listing/css/list'\n], function ($, _, __, component, listElementFactory, listTpl, elementWrapperTpl) {\n    'use strict';\n\n    var _defaults = {\n        title : 'Task List',\n        emptyText : __('The list is currently empty.')\n    };\n\n    var listApi = {\n        /**\n         * Remove a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        removeElement : function removeElement(listElement){\n            listElement.destroy();\n            this.getElement().find('ul li[data-id=\"'+listElement.getId()+'\"]').remove();\n            return this;\n        },\n\n        /**\n         * Insert a list element\n         * @param {taoTaskQueue/component/listing/element} listElement\n         * @returns {taskList}\n         */\n        insertElement : function insertElement(listElement){\n            var id = listElement.getId();\n            var $li = $(elementWrapperTpl({\n                id : id\n            }));\n            this.getElement().find('ul').prepend($li);\n            listElement.render($li);\n            return this;\n        },\n\n        /**\n         * Show the detail\n         * @param {taoTaskQueue/component/listing/report} detailElement - the detail element to be shown\n         * @param {Booleam} [show] - should the detail of an element be immediately shown or not\n         * @returns {taskList}\n         */\n        setDetail : function setDetail(detailElement, show){\n            detailElement.render(this.getElement().find('.view-detail'));\n            if(show){\n                this.setState('detail-view', true);\n            }\n            return this;\n        },\n\n        /**\n         * Hide the detail panel and display the default list view again\n         * @returns {taskList}\n         */\n        hideDetail : function hideDetail(){\n            this.setState('detail-view', false);\n            return this;\n        },\n\n        /**\n         * Scroll to the top of the list\n         * @returns {taskList}\n         */\n        scrollToTop : function scrollToTop(){\n            this.getElement().find('.task-list').get(0).scrollTo(0, 0);\n            return this;\n        },\n\n        /**\n         * Animate the insertion tset emphasis on it\n         * @param listElement\n         * @returns {taskList}\n         */\n        animateInsertion : function animateInsertion(listElement){\n            var $listElement = listElement.getElement();\n            var $container = $listElement.parent();\n            $container.addClass('inserting');\n            $listElement.addClass('new-element');\n            _.delay(function(){\n                $container.removeClass('inserting');\n                _.delay(function(){\n                    $listElement.removeClass('new-element');\n                }, 400);\n            },100);\n            return this;\n        }\n    };\n\n    /**\n     * Builds a simple task list component\n     *\n     * @param {Object} config - the component config\n     * @returns {taskList} the component\n     */\n    return function taskListFactory(config) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        /**\n         * The component\n         * @typedef {ui/component} taskList\n         */\n        return component(listApi)\n            .setTemplate(listTpl)\n            .on('render', function(){\n                var self = this;\n                this.getElement().find('.clear-all').on('click', function(e){\n                    e.preventDefault();\n                    self.trigger('clearall');\n                });\n            })\n            .init(initConfig);\n    };\n\n});\n\n","\ndefine('tpl!taoTaskQueue/component/manager/tpl/manager', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"task-manager-container\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Background tasks\", options) : helperMissing.call(depth0, \"__\", \"Background tasks\", options)))\n    + \"\\\">\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('css!taoTaskQueue/component/manager/css/manager',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTaskQueue/component/manager/manager',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'layout/loading-bar',\n    'ui/hider',\n    'ui/component',\n    'ui/badge/badge',\n    'ui/component/alignable',\n    'ui/animable/absorbable/absorbable',\n    'ui/animable/pulsable/pulsable',\n    'taoTaskQueue/component/listing/element',\n    'taoTaskQueue/component/listing/report',\n    'taoTaskQueue/component/listing/list',\n    'tpl!taoTaskQueue/component/manager/tpl/manager',\n    'css!taoTaskQueue/component/manager/css/manager'\n], function ($, _, __, loadingBar, hider, component, badgeFactory, makeAlignable, makeAbsorbable, makePulsable, listElementFactory, reportElementFactory, taskListFactory, managerTpl) {\n    'use strict';\n\n    /**\n     * Transform the task log summary into a configuration set for the badge\n     * @param {Object} tasksStatuses - the task log summary\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromStatus = function getBadgeDataFromStatus(tasksStatuses){\n        var total =  0;\n        var data = {loading : false};\n        if(tasksStatuses){\n            if(tasksStatuses.numberOfTasksInProgress){\n                total += parseInt(tasksStatuses.numberOfTasksInProgress, 10);\n                data.type = 'info';\n                data.loading = (tasksStatuses.numberOfTasksInProgress > 0);\n            }\n            if(tasksStatuses.numberOfTasksCompleted){\n                total += parseInt(tasksStatuses.numberOfTasksCompleted, 10);\n                data.type = 'success';\n            }\n            if(tasksStatuses.numberOfTasksFailed){\n                total += parseInt(tasksStatuses.numberOfTasksFailed, 10);\n                if(data.type === 'success'){\n                    data.type = 'warning';//if there are both success and failures, the status should be a warning\n                }else{\n                    data.type = 'error';\n                }\n            }\n            data.value = total;\n            return data;\n        }\n    };\n\n    /**\n     * Transform the internal list of elements into a configuration set for the badge\n     * @param {Object} elements - internal collection of task elements\n     * @returns {Object} the new badge data to be displayed following the format {type, loading, value}\n     */\n    var getBadgeDataFromElements = function getBadgeDataFromElements(elements){\n\n        var statusMap = {\n            in_progress: 'numberOfTasksInProgress',\n            created: 'numberOfTasksInProgress',\n            failed: 'numberOfTasksFailed',\n            completed: 'numberOfTasksCompleted',\n        };\n\n        var stats = {\n            numberOfTasksFailed : 0,\n            numberOfTasksCompleted : 0,\n            numberOfTasksInProgress : 0\n        };\n\n        _.forEach(elements, function(element){\n            var status = element.getStatus();\n            if(statusMap[status]){\n                //it is a know state, so add to the stats array\n                stats[statusMap[status]]++;\n            }\n        });\n\n        return getBadgeDataFromStatus(stats);\n    };\n\n    /**\n     * The collection of config used for component alignments\n     * the values have been adjusted to make it work well with the list's css\n     * @type {Object}\n     * @private\n     */\n    var _alignementConfig = {\n        initial : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156\n        },\n        showDetail : {\n            hPos: 'center',\n            hOrigin: 'center',\n            vPos: 'bottom',\n            vOrigin: 'top',\n            hOffset: -156-121\n        }\n    };\n\n    var taskQueue = {\n\n        /**\n         * Get the list of task elements\n         * @returns {taskQueueManager} - self for chaining\n         */\n        getTaskElements : function getTaskElements(){\n            return this.taskElements;\n        },\n\n        /**\n         * Show the details associated to a task\n         * @param {Object} tasksData - a single task data to view the report form\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showDetail : function showDetail(taskData){\n            var $component = this.getElement();\n            var list = this.list;\n            var reportElement = reportElementFactory({replace:true}, taskData)\n                .on('close', function(){\n                    list.hideDetail();\n                    list.alignWith($component, _alignementConfig.initial);\n                    this.destroy();\n                });\n            list.setDetail(reportElement, true);\n            list.alignWith($component, _alignementConfig.showDetail);\n            return this;\n        },\n\n        /**\n         * Add a new task\n         * @param {Object} tasksData - a single task data to be added to the list\n         * @param {Boolean} [animate=false] - tells if the new task addition should be made through a smooth transition effect\n         * @returns {taskQueueManager} - self for chaining\n         */\n        addNewTask : function addNewTask(taskData, animate){\n            var self = this;\n            var taskId = taskData.id;\n            var listElement = listElementFactory({}, taskData)\n                .on('remove', function(){\n                    delete self.taskElements[taskId];\n                    self.list.removeElement(listElement);\n                    self.trigger('remove', taskId);\n                    self.trigger('listchange');\n                })\n                .on('report', function(){\n                    self.trigger('report', taskId);\n                })\n                .on('download', function(){\n                    self.trigger('download', taskId);\n                })\n                .on('redirect', function(){\n                    loadingBar.start();\n\n                    self.hideList();\n\n                    self.trigger('redirect', taskId);\n                });\n\n\n            if(animate){\n                if(this.list.is('hidden')){\n                    this.list.show();\n                }\n                this.list.scrollToTop();\n            }\n            this.list.insertElement(listElement);\n            this.taskElements[taskId] = listElement;\n            this.trigger('listchange');\n\n            if(animate){\n                this.list.animateInsertion(listElement);\n            }\n            return this;\n        },\n\n        /**\n         * Update the badge display according to the current status of the tasks in the list\n         * @returns {taskQueueManager} - self for chaining\n         */\n        selfUpdateBadge : function selfUpdateBadge(){\n            var badgeData = getBadgeDataFromElements(this.getTaskElements());\n            if(!this.badge){\n                this.badge = makePulsable(badgeFactory(badgeData)).render(this.getElement());\n            }else{\n                this.badge.update(badgeData);\n            }\n            return this;\n        },\n\n        /**\n         * Load the the array of task element data requested form the server REST API\n         * @param {Array} tasksData - the task data to be loaded from the server REST API call\n         * @returns {taskQueueManager} - self for chaining\n         */\n        loadData : function loadData(tasksData){\n            var self = this;\n            var found = [];\n            if (tasksData.length) {\n                tasksData = tasksData.reverse();\n            }\n            _.forEach(tasksData, function(entry){\n                var id = entry.id;\n                if(self.taskElements[id]){\n                    //update\n                    self.taskElements[id].update(entry);\n                    if(self.taskElements[id].getStatus() !== entry.status){\n                        //highlight status change only\n                        self.taskElements[id].highlight();\n                    }\n                }else{\n                    //create\n                    self.addNewTask(entry);\n                }\n                found.push(id);\n            });\n\n            //remove any element from the list that are not found in the new data collection (task has been archived server side)\n            _.forEach(_.difference(_.keys(self.taskElements), found), function(id){\n                self.list.removeElement(self.taskElements[id]);\n                delete self.taskElements[id];\n            });\n\n            this.trigger('listchange');\n            return this;\n        },\n\n        /**\n         * Trigger the pulse animation on the status badge\n         * @returns {taskQueueManager} - self for chaining\n         */\n        pulse : function pulse(){\n            if(this.badge){\n                this.badge.pulse(3);\n            }\n            return this;\n        },\n\n        /**\n         * Show the list component\n         * @event listshow - Emitted when the list is displayed\n         * @returns {taskQueueManager} - self for chaining\n         */\n        showList : function showList() {\n            if (this.list) {\n                this.list.show();\n                this.trigger('listshow');\n            }\n            return this;\n        },\n\n        /**\n         * Hide the list component\n         * @event listhide - Emitted when the list is hidden\n         * @returns {taskQueueManager} - self for chaining\n         */\n        hideList : function hideList() {\n            if (this.list) {\n                this.list.hide();\n                this.trigger('listhide');\n            }\n            return this;\n        },\n\n        /**\n         * Remove all finished element (completed or failed) from the list\n         * @returns {taskQueueManager}\n         */\n        removeAllFinished : function removeAllFinished(){\n\n            var self = this;\n\n            _(this.taskElements).filter(function(element){\n                return (element.getStatus() === 'completed' || element.getStatus() === 'failed');\n            }).forEach(function(element){\n                delete self.taskElements[element.getId()];\n                self.list.removeElement(element);\n                self.trigger('listchange');\n            });\n\n            this.trigger('listclearfinished');\n            return this;\n        },\n\n        /**\n         * Toggle the visibility of the clear all button according to the element status\n         * @returns {taskQueueManager}\n         */\n        selfUpdateClearButton : function selfUpdateClearButton(){\n            var $clearAllBox = this.getElement().find('.clear-box');\n            var finishedCount = _(this.taskElements).map(function(element){\n                return element.getStatus();\n            }).filter(function(status){\n                return (status === 'completed' || status === 'failed');\n            }).size();\n            if(finishedCount > 0){\n                //show button\n                hider.show($clearAllBox);\n            }else{\n                hider.hide($clearAllBox);\n            }\n            return this;\n        }\n    };\n\n    /**\n     * Builds the task queue manager\n     * @param {Object} config - the component config\n     * @param {Array} data - the initial task data to be loaded from the server REST api call\n     * @returns {taskQueueManager} the component\n     *\n     * @event remove - Emitted when a list element is removed\n     * @event download - Emitted when a list element requests the file download associated to a completed task\n     * @event report - Emitted when a list element requests a task report to be displayed\n     * @event redirect - Emitted when a list element requests a redirection to the created resource\n     * @event listchange - Emitted when the list element list has been updated\n     * @event listclearfinished - Emitted when all the finished element from the list is removed\n     */\n    return function taskQueueManagerFactory(config, data) {\n\n        data = data || {};\n\n        /**\n         * The component\n         * @typedef {ui/component} taskQueueManager\n         */\n        return makeAbsorbable(component(taskQueue))\n            .setTemplate(managerTpl)\n            .on('destroy listhide', function(){\n                $(document).off('click.task-queue-manager');\n            })\n            .on('init', function() {\n                //initialize the task element collection\n                this.taskElements = {};\n\n                //create the list\n                this.list = makeAlignable(taskListFactory())\n                    .init({\n                        title : __('Background tasks'),\n                        emptyText : __('There is currently no background task'),\n                    });\n            })\n            .on('listshow', function(){\n                var self = this;\n                var $component = this.getElement();\n                //close the popup when clicking outside of the component\n                $(document).off('click.task-queue-manager').on('click.task-queue-manager', function(e){\n                    if($component.get(0) !== e.target && !$.contains($component.get(0), e.target)){\n                        if(!self.list.is('hidden')){\n                            self.hideList();\n                        }\n                    }\n                });\n            })\n            .on('listchange', function(){\n                this.selfUpdateBadge();\n                this.selfUpdateClearButton();\n            })\n            .on('render', function() {\n\n                var self = this;\n                var $trigger = this.getElement();\n\n                //position the list\n                this.list.render($trigger)\n                    .moveBy(0, 0)\n                    .alignWith($trigger, _alignementConfig.initial)\n                    .hide();//start hidden\n\n                //load initial data\n                this.loadData(data);\n\n                //prevent closing the panel when clicking on it\n                this.list.getElement()\n                    .addClass('overflown-element')\n                    .on('click', function(e){\n                        e.stopPropagation();\n                    });\n\n                this.list.on('clearall', function(){\n                    self.removeAllFinished();\n                });\n\n                //toggle list visibility\n                $trigger.on('click', function(){\n                    if(self.list.is('hidden')){\n                        self.showList();\n                    }else{\n                        self.hideList();\n                    }\n                });\n\n            })\n            .init(config || {});\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoTaskQueue/controller/main',[\n    'jquery',\n    'taoTaskQueue/component/manager/manager',\n    'ui/taskQueue/taskQueue'\n],\nfunction ($, taskQueueManagerFactory, taskQueue) {\n    'use strict';\n\n    /**\n     * This controller initialize all the task queue component globally for tao backoffice use\n     * @exports taoTaskQueue/controller/main\n     */\n    return {\n        start() {\n\n            const taskManager = taskQueueManagerFactory({\n                replace: true\n            })\n            .on('remove', taskId => taskQueue.archive(taskId) )\n            .on('report', taskId => {\n                //show report in popup\n                taskQueue.get(taskId).then( task => taskManager.showDetail(task) );\n            })\n            .on('download', taskId => taskQueue.download(taskId) )\n            .on('redirect', taskId => taskQueue.redirect(taskId) )\n            .on('listclearfinished', () => {\n                taskQueue\n                    .pollAllStop()\n                    .archive('all')\n                    .then( () => taskQueue.pollAll() );\n            })\n            .render($('#taskqueue').parent())\n            .hide();//start hidden to prevent blinking effect\n\n            //listen to events started by the task queue model\n            taskQueue\n                .on('taskcreated', data => {\n                    if (taskManager.list.is('hidden')) {\n                        taskManager.absorbBurst(data.sourceDom, [0, 300, 600]).then( () => {\n                            taskManager.addNewTask(data.task);\n                            taskQueue.pollAll();\n                        });\n                    } else {\n                        taskManager.addNewTask(data.task, true);\n                        taskQueue.pollAll();\n                    }\n                })\n                .on('multitaskstatuschange', () =>  taskManager.pulse() )\n                .on('pollAll', tasks => {\n                    if (taskManager.is('hidden')) {\n                        taskManager.show();\n                    }\n                    taskManager.loadData(tasks);\n                })\n                .pollAll(true);//start polling immediately on load\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoTaskQueue/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'taoTaskQueue/controller/main'\n            }\n        }\n    };\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('div.task-element{position:relative;background:#f3f1ef;padding:10px 20px;width:100%;height:70px;-webkit-transition:background, 2s, ease-out, 0s;-moz-transition:background, 2s, ease-out, 0s;-ms-transition:background, 2s, ease-out, 0s;-o-transition:background, 2s, ease-out, 0s;transition:background, 2s, ease-out, 0s}div.task-element.highlight{background:#fff;-webkit-transition:background, 0s, ease-out, 0s;-moz-transition:background, 0s, ease-out, 0s;-ms-transition:background, 0s, ease-out, 0s;-o-transition:background, 0s, ease-out, 0s;transition:background, 0s, ease-out, 0s}div.task-element .container-icon{position:absolute}div.task-element .container-icon .shape{display:inline-block;border-radius:50%;width:40px;height:40px;top:2px;position:relative}div.task-element .container-icon .shape [class^=icon-],div.task-element .container-icon .shape [class*=\\\" icon-\\\"]{font-size:20px;font-size:2rem;position:relative;top:9px;left:12px;text-shadow:none}div.task-element .container-icon .shape .icon-export,div.task-element .container-icon .shape .icon-import,div.task-element .container-icon .shape .icon-connect{left:10px}div.task-element .container-icon .shape .icon-property-advanced,div.task-element .container-icon .shape .icon-result-ok,div.task-element .container-icon .shape .icon-result-nok{top:10px;left:10px}div.task-element.in_progress .container-icon .shape{background:#0e5d91}div.task-element.in_progress .container-icon .shape [class^=icon-],div.task-element.in_progress .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7eff4}div.task-element.in_progress .action-group.action-bottom [data-role=notify]{display:none}div.task-element.in_progress .action-group.action-top [data-role=remove]{display:none}div.task-element.completed .container-icon .shape{background:#0e914b}div.task-element.completed .container-icon .shape [class^=icon-],div.task-element.completed .container-icon .shape [class*=\\\" icon-\\\"]{color:#e7f4ed}div.task-element.completed .action-group.action-bottom [data-role=download],div.task-element.completed .action-group.action-bottom [data-role=report],div.task-element.completed .action-group.action-bottom [data-role=redirect]{display:inline-block}div.task-element.failed .container-icon .shape{background:#ba122b}div.task-element.failed .container-icon .shape [class^=icon-],div.task-element.failed .container-icon .shape [class*=\\\" icon-\\\"]{color:#f8e7ea}div.task-element.failed .action-group.action-bottom [data-role=download],div.task-element.failed .action-group.action-bottom [data-role=report],div.task-element.failed .action-group.action-bottom [data-role=redirect]{display:inline-block}div.task-element .container-text{padding-top:0px;margin-left:60px;width:240px}div.task-element .container-text .label{min-height:22px;max-height:38px;overflow:hidden;color:#222}div.task-element .container-text .time{color:#92918f;font-size:12px;font-size:1.2rem}div.task-element .action-group{position:absolute}div.task-element .action-group [class^=icon-],div.task-element .action-group [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;background-color:rgba(0,0,0,0);width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-element .action-group [class^=icon-]:hover,div.task-element .action-group [class*=\\\" icon-\\\"]:hover{opacity:.6}div.task-element .action-group.action-top{top:6px;right:14px}div.task-element .action-group.action-bottom{bottom:6px;right:12px}div.task-element .action-group.action-bottom [class^=icon-],div.task-element .action-group.action-bottom [class*=\\\" icon-\\\"]{display:none}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/listing/css/element.css.map */div.task-detail-element{position:relative;padding:10px 20px;width:600px;min-height:250px;background:#f3f1ef}div.task-detail-element .detail-description .label{margin-right:4px;color:#222;font-weight:bold}div.task-detail-element .detail-description .time{margin-left:4px;color:#92918f;font-size:12px;font-size:1.2rem}div.task-detail-element .detail-body{max-height:500px;overflow-y:auto;padding:10px 0}div.task-detail-element .action-top{position:absolute;top:9px;right:14px}div.task-detail-element .action-top [class^=icon-],div.task-detail-element .action-top [class*=\\\" icon-\\\"]{font-size:16px;font-size:1.6rem;color:#222;background-color:rgba(0,0,0,0);width:20px;height:20px;display:inline-block;padding-left:4px;margin-left:5px;cursor:pointer}div.task-detail-element .action-top [class^=icon-]:hover,div.task-detail-element .action-top [class*=\\\" icon-\\\"]:hover{opacity:.6}div.task-detail-element .no-detail{display:none}div.task-detail-element.noreport .no-detail{display:block;color:#92918f}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/listing/css/report.css.map */div.task-listing{position:relative;cursor:default;padding-top:0px}div.task-listing div.box{position:relative;min-height:76px;min-width:360px;background:#f3f1ef;-webkit-box-shadow:0 3px 6px 0px rgba(0, 0, 0, 0.6);-moz-box-shadow:0 3px 6px 0px rgba(0, 0, 0, 0.6);-ms-box-shadow:0 3px 6px 0px rgba(0, 0, 0, 0.6);-o-box-shadow:0 3px 6px 0px rgba(0, 0, 0, 0.6);box-shadow:0 3px 6px 0px rgba(0, 0, 0, 0.6);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}div.task-listing div.box .description{padding:2px 20px;background:#dbd9d7;color:#222;font-weight:bold;border-bottom:solid 1px #ddd;min-height:8px}div.task-listing div.box .arrow{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg);border:1px #ddd solid;border-right:none;border-bottom:none;width:16px;height:16px;background:#dbd9d7;color:#222;position:absolute;right:14px;top:-9px}div.task-listing div.box ul.task-list{position:relative;top:0;left:0;right:0;opacity:1;padding:0 !important;border:none;max-height:460px;overflow:auto;background:#c2c1bf;position:relative}div.task-listing div.box ul.task-list li{position:relative;width:100%;max-height:100px;color:#222;background:#c2c1bf}div.task-listing div.box ul.task-list li:not(:last-child){border-bottom:solid 1px #dbd9d7}div.task-listing div.box ul.task-list li.inserting{max-height:0;-webkit-transition:max-height, 0.5s, ease-out, 0s;-moz-transition:max-height, 0.5s, ease-out, 0s;-ms-transition:max-height, 0.5s, ease-out, 0s;-o-transition:max-height, 0.5s, ease-out, 0s;transition:max-height, 0.5s, ease-out, 0s}div.task-listing div.box ul.task-list li.inserting .task-element{height:0px}div.task-listing div.box ul.task-list li.inserted{min-height:70px}div.task-listing div.box ul.task-list li .task-element{transform:scaleY(1);-webkit-transition:scaleY, 0.6s, ease-out, 0s;-moz-transition:scaleY, 0.6s, ease-out, 0s;-ms-transition:scaleY, 0.6s, ease-out, 0s;-o-transition:scaleY, 0.6s, ease-out, 0s;transition:scaleY, 0.6s, ease-out, 0s}div.task-listing div.box ul.task-list li .task-element.new-element{transform-origin:20% 0;transform:scaleY(0)}div.task-listing div.box .clear-box{text-align:center;border-top:solid 1px #ddd;background:#eceae8;padding:2px 0}div.task-listing div.box .clear-box .clear-all{text-decoration:none;color:#3e7da7}div.task-listing div.box .clear-box .clear-all:hover{text-decoration:underline;color:#0e5d91}div.task-listing div.box .empty-placeholder{width:100%;position:absolute;top:25px;padding:12px 20px;font-style:italic;color:#222}div.task-listing div.box .view-detail{display:none}div.task-listing.detail-view .box .task-list,div.task-listing.detail-view .box .clear-box{display:none}div.task-listing.detail-view .box .view-detail{display:block;position:relative}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/listing/css/list.css.map */.task-manager-container{cursor:pointer;position:relative;width:40px;height:64px;background-color:rgba(0,0,0,0);padding:22px 8px 0px}.task-manager-container:hover{-webkit-transition:background-color 0.2s ease;-moz-transition:background-color 0.2s ease;-ms-transition:background-color 0.2s ease;-o-transition:background-color 0.2s ease;transition:background-color 0.2s ease;background-color:rgba(14,93,145,.5);text-decoration:none}.dark-bar nav .settings-menu:hover~.persistent-menu .task-listing .box{box-shadow:none;border-color:#eee}.dark-bar nav .settings-menu:hover~.persistent-menu .task-listing .box .arrow{display:none}\\n\\n/*# sourceMappingURL=taoTaskQueue/component/manager/css/manager.css.map */');\n","\ndefine(\"taoTaskQueue/loader/taoTaskQueue.bundle\", function(){});\n"],"mappings":"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"}